
class Solution {
public:
    int maxPoints(vector<vector<int>>& points) {
        
        int result = 0;

        for(int i=0;i<points.size();i++){
            int same_points = 1;
            
            unordered_map<double,int>mp;
            for(int j=i+1;j<points.size();j++){

                if(points[i][0] == points[j][0] && points[i][1] == points[j][1] ){
                    same_points++;
                }
                else if(points[i][0] == points[j][0]){
                    mp[INT_MAX]++;
                }
                else{
                    double slope = double(points[i][1]-points[j][1])/double(points[i][0]-points[j][0]);
                    mp[slope]++;
                }
            }

            int max_freq = 0;
            for(auto x : mp){
                max_freq = max(max_freq,x.second);
            } 

            max_freq += same_points;

            result = max(result,max_freq);
        }

        return result;
    }
};