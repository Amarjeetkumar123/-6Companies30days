
// brute force (TLE)

class Solution {
public:
    int ans = 0;
    int cnt = 0;
    int dfs(int i , int n, int k){
       
        if(i > n)
            return ans;

        cnt++;
        if(cnt == k)
            ans = i;

        for(int j=0;j<10;j++){
             dfs(10*i+j,n,k);
        }
        return ans;
    }

    int findKthNumber(int n, int k) {
        
        for(int i=1;i<=9;i++){
            dfs(i,n,k);
        }

        return ans;
    }
};




// Optimise Code (Accepted)

class Solution {
public:
    int findKthNumber(int n, int k) {
        int x = 1; 
        while (k > 1) {

            long cnt = 0; 

            for (long diff = 1, curr = x; curr <= n; curr *= 10, diff *= 10) 
                cnt += min(n - curr + 1, diff); 

            if (k > cnt) k -= cnt, ++x;
             
            else --k, x *= 10; 
        }

        return x; 
    }
};
