// Time Complexity : O(n)
// Space Complexity : O(n)

class Solution {
public:
    int peopleAwareOfSecret(int n, int delay, int forget) {
        
        vector<long>dp(n+1);
        long noOfPeopleSharingSecret = 0;
        long res = 0;
        long mod = (long)1e9+7;

        // day 1 only one person to know the secret
        dp[1] = 1;

        // i means day
        for(int i=2;i<=n;i++){
            long noOfNewPeopleSharingSecret = dp[max(i-delay,0)];
            long noOfPeopleForgottingSecret = dp[max(i-forget,0)];

            noOfPeopleSharingSecret += (noOfNewPeopleSharingSecret - noOfPeopleForgottingSecret + mod)%mod;
    // dp[i] means the number of people who found the secret on ith day
            dp[i] = noOfPeopleSharingSecret;
        }

        for(int i = n-forget+1; i<=n;i++){
            res = (res+dp[i])%mod;
        }

        return res;
    }
};