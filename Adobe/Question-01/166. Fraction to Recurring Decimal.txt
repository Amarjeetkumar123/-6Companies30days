class Solution {
public:
    string fractionToDecimal(int numerator, int denominator) {
        
        if(!numerator)   return "0";

        string ans = "";
        // if one of them is -ve
        if(numerator > 0 ^ denominator > 0) ans += "-";
        long num = labs(numerator), den = labs(denominator);

        // 1st part : remainder is zero
        long q = num / den;
        long rem = num % den;
        ans += to_string(q);
        if(rem == 0)    return ans;

        // 2nd part : remainder is not zero and repeating 

        ans += ".";

        unordered_map<long,int>mp;

        while(rem != 0){

            if(mp.find(rem) != mp.end()){
                int pos = mp[rem];
                ans.insert(pos,"(");
                ans += ")";
                break;
            }
            else{
                
                mp[rem] = ans.length();
                rem = rem*10;
                q = rem / den;
                rem = rem % den;
                ans += to_string(q);
            }
        }

        return ans;        
    }
};